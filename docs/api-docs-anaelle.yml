openapi: 3.0.3
info:
  title: TeaMaker
  version: 1.0.0
tags:
  - name: project
    description: Everything about projects
  - name: developper
    description: Everything about developpers
  - name: team
    description: Everything about teams
paths:
  /projects:
    get:
      tags:
        - project
      summary: Get all existing projects
      operationId: getProjects
      parameters:
        - name: name
          in: query
          description: Name of the project that needs to be considered for filter
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: false
          explode: true
          schema:
            type: string
            default: in progress
            enum:
              - cancelled
              - pending
              - in progress
              - done
        - name: startDate
          in: query
          description: Start date of the query, projects will only be in response of their start date is after this date
          required: false
          explode: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: End date of the query, projects will only be in response of their start date is before this date
          required: false
          explode: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Project'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
    post:
      tags:
        - project
      summary: Add a project to portfolio
      operationId: addProject
      requestBody:
        description: Create a new pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '405':
          description: Invalid input
      security:
        - api_key: []
  /project/next:
    get:
      tags:
        - project
      summary: Get next project
      operationId: getnextProject
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: No project to come
  /project/{projectId}:
    get:
      tags:
        - project
      summary: Find a project by ID
      operationId: getProjectById
      parameters:
        - name: projectId
          in: path
          description: ID of project that needs to be returned
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: No project with this ID
      security:
        - api_key: []
    post:
      tags:
        - project
      summary: Adds a project
      operationId: createProject
      parameters:
        - name: projectId
          in: path
          description: ID of project that needs to be created
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '405':
          description: Invalid input
      security:
        - api_key: []
    patch:
      tags:
        - project
      summary: Updates a project
      operationId: updateProject
      parameters:
        - name: projectId
          in: path
          description: ID of project that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '405':
          description: Invalid input
      security:
        - api_key: []
  /developpers:
    get:
      tags:
        - developper
      summary: Get all existing developpers
      operationId: getDeveloppers
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: false
          explode: true
          schema:
            type: string
            default: available
            enum:
              - available
              - pending
              - sold
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Developper'
        '400':
          description: Invalid status value
  /developper/{developperEmail}:
    get:
      tags:
        - developper
      summary: Find developper by email
      description: Returns a single pet
      operationId: getDevelopperByEmail
      parameters:
        - name: developperEmail
          in: path
          description: Email of developper to return
          required: true
          schema:
            type: string
            format: email
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Developper'
        '400':
          description: Invalid email supplied
        '404':
          description: Developper not found
      security:
        - api_key: []
    post:
      tags:
        - developper
      summary: Adds a developper
      operationId: createDevelopper
      parameters:
        - name: developperEmail
          in: path
          description: Email of developper that needs to be created
          required: true
          schema:
            type: string
            format: email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Developper'
      responses:
        '405':
          description: Invalid input
      security:
        - api_key: []
    patch:
      tags:
        - developper
      summary: Updates a developper
      operationId: updateDevelopper
      parameters:
        - name: developperEmail
          in: path
          description: Email of developper that needs to be updated
          required: true
          schema:
            type: string
            format: email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Developper'
      responses:
        '405':
          description: Invalid input
      security:
        - api_key: []
  /teams:
    get:
      tags:
        - team
      summary: Find all existing teams
      description: Use one of the parameters but not both
      operationId: getTeams
      parameters:
        - name: projectId
          in: query
          schema:
            type: integer
            format: int64
        - name: developperEmail
          in: query
          schema:
            type: string
            format: email
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /team:
    get:
      tags:
        - team
      summary: Find current team
      description: Use one of the parameters but not both
      operationId: getTeam
      parameters:
        - name: projectId
          in: query
          schema:
            type: integer
            format: int64
        - name: developperEmail
          in: query
          schema:
            type: string
            format: email
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        priority:
          type: string
          enum:
            - normal
            - best effort
            - critical
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        stack:
          type: array
          items:
            type: object
            properties:
              technology:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
              devsNeeded:
                type: integer
      xml:
        name: project
    Developper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
          format: email
        experience:
          type: array
          items:
            type: object
            properties:
              technology:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
              startDate:
                type: string
                format: date
        hiringDate:
          type: string
          format: date
        resignationDate:
          type: string
          format: date
      xml:
        name: developper
    Team:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/Project'
        team:
          type: array
          minItems: 3
          maxItems: 8
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Developper'
      xml:
        name: team
  requestBodies:
    Project:
      description: Project object that needs to be added to the portfolio
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Project'
    Developper:
      description: Developper object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Developper'
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header